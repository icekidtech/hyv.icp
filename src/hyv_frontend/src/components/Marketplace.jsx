import React, { useState } from 'react';

function Marketplace({
  datasets,
  loading,
  onRefresh,
  onPurchaseDataset,
  onViewDataset,
  isAuthenticated
}) {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [sortBy, setSortBy] = useState('newest');

  // Filter and sort datasets
  const filteredDatasets = datasets
    .filter(dataset => {
      const matchesSearch = dataset.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           dataset.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           (Array.isArray(dataset.tags) && dataset.tags.some(tag =>
                             tag.toLowerCase().includes(searchTerm.toLowerCase())
                           ));

      const matchesCategory = selectedCategory === 'all' ||
                             (Array.isArray(dataset.tags) && dataset.tags.includes(selectedCategory));

      return matchesSearch && matchesCategory;
    })
    .sort((a, b) => {
      switch (sortBy) {
        case 'newest':
          return (b.uploadDate || 0) - (a.uploadDate || 0);
        case 'oldest':
          return (a.uploadDate || 0) - (b.uploadDate || 0);
        case 'price-low':
          return (a.price || 0) - (b.price || 0);
        case 'price-high':
          return (b.price || 0) - (a.price || 0);
        case 'rating':
          return (b.rating || 0) - (a.rating || 0);
        default:
          return 0;
      }
    });

  // Get unique categories from all datasets
  const categories = ['all', ...new Set(
    datasets.flatMap(dataset => Array.isArray(dataset.tags) ? dataset.tags : [])
  )];

  return (
    <div className="marketplace-container">
      {/* Marketplace Header */}
      <div className="marketplace-header">
        <div className="marketplace-title-section">
          <h1 className="marketplace-title">
            <span className="gradient-text">🛒 AI Marketplace</span>
          </h1>
          <p className="marketplace-subtitle">
            Discover and purchase high-quality synthetic datasets generated by AI
          </p>
        </div>
        <div className="marketplace-stats">
          <div className="stat-item">
            <span className="stat-number">{datasets.length}</span>
            <span className="stat-label">Datasets</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">
              {datasets.reduce((sum, d) => sum + (d.downloads || 0), 0)}
            </span>
            <span className="stat-label">Downloads</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">
              {datasets.reduce((sum, d) => sum + (d.price || 0), 0).toFixed(2)}
            </span>
            <span className="stat-label">eICP Total</span>
          </div>
        </div>
      </div>

      {/* Search and Filters */}
      <div className="marketplace-controls">
        <div className="search-section">
          <div className="search-input-wrapper">
            <input
              type="text"
              placeholder="Search datasets by title, description, or tags..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="search-input"
            />
            <div className="search-icon">🔍</div>
          </div>
        </div>

        <div className="filter-section">
          <div className="filter-group">
            <label>Category:</label>
            <select
              value={selectedCategory}
              onChange={(e) => setSelectedCategory(e.target.value)}
              className="filter-select"
            >
              {categories.map(category => (
                <option key={category} value={category}>
                  {category === 'all' ? 'All Categories' : category}
                </option>
              ))}
            </select>
          </div>

          <div className="filter-group">
            <label>Sort by:</label>
            <select
              value={sortBy}
              onChange={(e) => setSortBy(e.target.value)}
              className="filter-select"
            >
              <option value="newest">Newest First</option>
              <option value="oldest">Oldest First</option>
              <option value="price-low">Price: Low to High</option>
              <option value="price-high">Price: High to Low</option>
              <option value="rating">Highest Rated</option>
            </select>
          </div>

          <button
            onClick={onRefresh}
            disabled={loading}
            className="btn btn-secondary refresh-btn"
          >
            {loading ? (
              <>
                <div className="loading-spinner small"></div>
                <span>Loading...</span>
              </>
            ) : (
              <>
                <span>🔄 Refresh</span>
              </>
            )}
          </button>
        </div>
      </div>

      {/* Results Summary */}
      <div className="results-summary">
        <p>
          Showing {filteredDatasets.length} of {datasets.length} datasets
          {searchTerm && ` matching "${searchTerm}"`}
          {selectedCategory !== 'all' && ` in ${selectedCategory}`}
        </p>
      </div>

      {/* Dataset Grid */}
      <div className="dataset-grid marketplace-grid">
        {filteredDatasets.length > 0 ? (
          filteredDatasets.map((dataset) => (
            <div key={Number(dataset.id)} className="dataset-card marketplace-card">
              <div className="card-header">
                <div className="dataset-title-section">
                  <h3 className="dataset-title">
                    {dataset.title || `Dataset #${Number(dataset.id)}`}
                  </h3>
                  <div className="dataset-badges">
                    <span className="badge verified">✓ Verified</span>
                    {dataset.featured && <span className="badge featured">⭐ Featured</span>}
                  </div>
                </div>
                <div className="dataset-price">
                  <span className="price-amount">{dataset.price || 0}</span>
                  <span className="price-unit">eICP</span>
                </div>
              </div>

              <div className="card-content">
                <p className="dataset-description">
                  {dataset.description || "AI-generated synthetic dataset for machine learning training"}
                </p>

                <div className="dataset-meta">
                  <div className="meta-item">
                    <span className="meta-icon">📊</span>
                    <span className="meta-text">
                      {dataset.content ? dataset.content.length : 0} characters
                    </span>
                  </div>
                  <div className="meta-item">
                    <span className="meta-icon">⭐</span>
                    <span className="meta-text">
                      {dataset.rating || 0}/100 rating
                    </span>
                  </div>
                  <div className="meta-item">
                    <span className="meta-icon">📥</span>
                    <span className="meta-text">
                      {dataset.downloads || 0} downloads
                    </span>
                  </div>
                  <div className="meta-item">
                    <span className="meta-icon">📅</span>
                    <span className="meta-text">
                      {dataset.uploadDate ?
                        new Date(Number(dataset.uploadDate)).toLocaleDateString() :
                        'Recent'
                      }
                    </span>
                  </div>
                </div>

                <div className="dataset-tags">
                  {Array.isArray(dataset.tags) && dataset.tags.length > 0 ? (
                    dataset.tags.slice(0, 4).map((tag, index) => (
                      <span key={index} className="tag">{tag}</span>
                    ))
                  ) : (
                    <span className="tag">synthetic-data</span>
                  )}
                  {Array.isArray(dataset.tags) && dataset.tags.length > 4 && (
                    <span className="tag">+{dataset.tags.length - 4} more</span>
                  )}
                </div>
              </div>

              <div className="card-actions">
                <button
                  className="btn btn-secondary btn-outline"
                  onClick={() => onViewDataset(dataset)}
                >
                  👁️ Preview
                </button>
                <button
                  className="btn btn-primary"
                  onClick={() => onPurchaseDataset(Number(dataset.id))}
                  disabled={!isAuthenticated}
                >
                  {isAuthenticated ? '🛒 Purchase' : '🔐 Login to Purchase'}
                </button>
              </div>
            </div>
          ))
        ) : (
          <div className="empty-state marketplace-empty">
            <div className="empty-icon">🛒</div>
            <h3>No datasets found</h3>
            <p>
              {searchTerm || selectedCategory !== 'all' ?
                'Try adjusting your search or filters to find more datasets.' :
                'No datasets are available in the marketplace yet. Check back soon!'
              }
            </p>
            {(searchTerm || selectedCategory !== 'all') && (
              <div className="empty-actions">
                <button
                  className="btn btn-secondary"
                  onClick={() => {
                    setSearchTerm('');
                    setSelectedCategory('all');
                  }}
                >
                  Clear Filters
                </button>
              </div>
            )}
          </div>
        )}
      </div>

      {/* Marketplace Footer */}
      <div className="marketplace-footer">
        <div className="footer-content">
          <div className="footer-section">
            <h4>🚀 Ready to Generate?</h4>
            <p>Create your own AI-generated datasets and sell them in the marketplace.</p>
            <button
              className="btn btn-primary"
              onClick={() => {
                // This will be handled by the parent component to switch to generation page
                const event = new CustomEvent('switchToGeneration');
                window.dispatchEvent(event);
              }}
            >
              Generate Dataset
            </button>
          </div>
          <div className="footer-section">
            <h4>💡 Marketplace Tips</h4>
            <ul>
              <li>Browse datasets by category or search for specific topics</li>
              <li>Check ratings and download counts to find quality datasets</li>
              <li>Login to purchase and download datasets</li>
              <li>Generate your own datasets to earn eICP tokens</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
}

export default Marketplace;
